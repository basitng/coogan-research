Number,Sentence,Prompt,Image Link
1,"Hey everyone, my name is Vishwas and welcome to a brand new tutorial series on React query.",1.
2,In this introductory video we will talk about the what and why of React query and in the rest of the series we will explore the different features it provides.,"A mid-journey image of two people looking at their laptop in a cafe, and talking about the different features provided by React Query."
3,"Now, what I'm trying to do is make this channel a onestop shop for everything related to React.",2.
4,So far we have tutorials on react fundamentals and advanced topics.,A mid-journey image of someone typing away on their laptop and highlighting the importance of having a library for data fetching.
5,"React hooks, react, redux, react formic, react storybook, react, render practical, react, react table and react TypeScript.",3.
6,To add to this list we are going to learn about the React query package.,A mid-journey image of a person checking the server state of a project on their laptop in a coffee shop.
7,Let's begin with the what?,4.
8,What is react query?,A mid-journey image of a person reading the React Query documentation on their laptop in a park.
9,"Well, it is a library for fetching data in a React application.",5.
10,Now you might wonder why would you need a library for data fetching?,A mid-journey image of two programmers discussing how to use React Query to make basic queries.
11,"Since React is a UI library, there is no specific pattern for data fetching.",6.
12,What we typically do is make use of Use effect hook for data fetching and use state hook to maintain component state like loading error or the resulting data if the data is needed throughout the app.,A mid-journey image of a programmer debugging a React code on their laptop in a library.
13,We tend to use state management libraries.,7.
14,But what is important to note here is that most of the state management libraries are good for working with client state like theme for the application or whether a model is open.,A mid-journey image of a programmer discussing with their co-worker how to set up an axios interceptor and work with React Query.
15,They are not great for working with Asynchronous or Server State.,8.
16,And this is because server state is very different to client state.,A mid-journey image of two co-workers implementing how to make use of Use effect hook for data fetching in a cafe.
17,Client state is persisted in your app memory and accessing or updating it is synchronous.,9.
18,"Server state on the other hand, is persisted remotely in a database perhaps and requires Asynchronous APIs for fetching or Updating.",A mid-journey image of a programmer using Use state hook to maintain component state when fetching data from a remote server.
19,"Also, server state, unlike client state has shared ownership data can be updated by someone else without your knowledge, which can quickly lead to UI data that is not in sync with the remote data.",10.
20,"It becomes even more challenging when you have to deal with caching deduping multiple requests for the same data, updating still data in the background, performance optimizations when it comes to pagination and lazy loading, et cetera.","A mid-journey image of a programmer debugging how to pull data, work with React query devtools and create reusable query hooks for data fetching on their laptop in a coffee shop."
21,"If you have to cater to all these in an application, it requires significant time and effort to do it all by yourself.",11.
22,Or you can take the smarter approach and use a library which makes handling all these scenarios a walk in the park.,"A mid-journey image of two co-workers discussing how to handle server state which requires Asynchronous APIs like pagination, lazy loading, et cetera for data fetching."
23,"And you have probably guessed it, that library is React Query.",12.
24,"I will even go to the extent of saying even if you don't have complex requirements like the ones I've stated here, watch this series and give React query a try for your data fetching needs because you'll not want to go back.",A mid-journey image of a programmer updating still data in the background while creating a React application in a library.
25,That is how amazing this library is.,13.
26,"Well, if I've convinced you, here are some of the features we are going to be implementing in this series with the React query package.",A mid-journey image of two programmers discussing the importance of invalidating queries when a mutation is successful.
27,"We're going to learn how to make basic queries, how to pull data work with React query DevTools, how to create reusable query hooks for data fetching, how to query by ID, parallel queries, dynamic queries, dependent queries, infinite and paginated queries.",14.
28,"We also need to keep in mind that server state is not just fetching, it also needs updating.",A mid-journey image of a programmer working on optimizing the performance of their React application by introducing React Query for data fetching.
29,"We will learn how to update data using mutations, how to invalidate queries when a mutation is successful, optimistic Updates and we will wind up the series with a video on how to set up an axios interceptor and work with React query.",15.
30,"By the end of the series, you'll have a really good knowledge of React query and data fetching in React.","A mid-journey image of a programmer using React Query to make handle complex scenarios like caching, deduping, and performing optimistic updates."
